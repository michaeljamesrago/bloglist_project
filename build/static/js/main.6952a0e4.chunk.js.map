{"version":3,"sources":["components/Blog.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","name","user","className","title","author","likes","baseUrl","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","setToken","newToken","login","credentials","App","useState","username","setUsername","password","setPassword","setUser","blogs","setBlogs","setTitle","setAuthor","url","setUrl","setLikes","useEffect","blogService","console","log","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","event","preventDefault","loginService","setItem","stringify","handleSubmitNewBlog","newBlog","concat","onSubmit","value","onChange","target","type","min","map","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6952a0e4.chunk.js","sourcesContent":["import React from 'react'\nconst Blog = ({blog}) => {\n  const name = blog.user ? blog.user.name : \"No user recorded\"\n  return (\n    <div className=\"blog\">\n      <p>Title: {blog.title}</p>\n      <p>Author: {blog.author}</p>\n      <p>Likes: {blog.likes}</p>\n      <p>User: {name}</p>\n    </div>\n  )\n}\n\nexport default Blog\n","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\n\nexport default { getAll, create, setToken }\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }\n","import React, { useState, useEffect } from 'react'\nimport './App.css'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nconst App = () => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n\n  const [blogs, setBlogs] = useState([])\n\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n  const [likes, setLikes] = useState(0)\n\n\n  useEffect(() => {\n    blogService.getAll().then(blogs => {\n      console.log(\"BLOGS RETRIEVED: \", blogs)\n      setBlogs( blogs )\n    })\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedInBlogAppUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const handleUsernameChange = (event) => {\n    console.log(event.target.value)\n    setUsername(event.target.value)\n  }\n  const handlePasswordChange = (event) => {\n    console.log(event.target.value)\n    setPassword(event.target.value)\n  }\n  const handleAuthorChange = (event) => {\n    console.log(event.target.value)\n    setAuthor(event.target.value)\n  }\n  const handleTitleChange = (event) => {\n    console.log(event.target.value)\n    setTitle(event.target.value)\n  }\n  const handleUrlChange = (event) => {\n    console.log(event.target.value)\n    setUrl(event.target.value)\n  }\n  const handleLikesChange = (event) => {\n    console.log(event.target.value)\n    setLikes(event.target.value)\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    console.log(`Logging in with ${username}`)\n\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(\"loggedInBlogAppUser\", JSON.stringify(user))\n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      console.log(exception)\n      console.log(\"There was an exception\")\n    }\n  }\n\n  const handleSubmitNewBlog = async (event) => {\n    event.preventDefault()\n    try {\n      const newBlog = await blogService.create({\n        title,\n        author,\n        url,\n        likes\n      })\n\n      setBlogs(blogs.concat(newBlog))\n\n      setTitle('')\n      setAuthor('')\n      setUrl('')\n      setLikes(0)\n    } catch (exception) {\n      console.log(exception)\n      console.log(\"There was an exception\")\n    }\n\n  }\n\n  if (user === null) {\n    return (\n      <div>\n        <h2>Log in to application</h2>\n        <form onSubmit={handleLogin}>\n          <p>\n            Username: <input value={username} onChange={handleUsernameChange} />\n          </p>\n          <p>\n            Password: <input value={password} onChange={handlePasswordChange} />\n          </p>\n          <button type=\"submit\">Log In</button>\n        </form>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <p>{user.name} is logged in</p>\n      <form onSubmit={handleSubmitNewBlog}>\n      <p>\n      Title: <input type=\"text\" name=\"title\" value={title} onChange={handleTitleChange} />\n      </p>\n      <p>\n      Author: <input type=\"text\" name=\"author\" value={author} onChange={handleAuthorChange} />\n      </p>\n      <p>\n      URL: <input type=\"text\" name=\"url\" value={url} onChange={handleUrlChange} />\n      </p>\n      <p>\n      Likes: <input type=\"number\" min=\"0\" name=\"likes\" value={likes} onChange={handleLikesChange} />\n      </p>\n      <button type=\"submit\">Submit</button>\n      </form>\n      <h2>blogs</h2>\n      {blogs.map(blog =>\n        <Blog key={blog.id} blog={blog} />\n      )}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}